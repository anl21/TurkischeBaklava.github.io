[ { "title": "Map, Filter And Fold", "url": "/posts/Maps,-Filters-and-Fold/", "categories": "Programming Languages, Section 3", "tags": "pl part a", "date": "2020-12-28 01:10:29 +0300", "snippet": "Map(* Type of map: (&#39;a -&amp;gt; &#39;b) * &#39;a list -&amp;gt; &#39;b list *)fun map (f,xs) = case xs of [] =&amp;gt; [] |x::xs&#39; =&amp;gt; (f x)::map(f,xs&#39;)The map function takes a list and a function f and produces a new list by applying fto each element of the list.val incremente..." }, { "title": "Tail Call Optimization", "url": "/posts/Tail-Call-Optimization/", "categories": "Programming Languages, Section 2", "tags": "pl part a", "date": "2020-12-26 01:19:29 +0300", "snippet": "One of the characteristic features of functional programming is recursion concept.Recursions are not suppose to be harder than using loops. Actually often much easier than loop: When processing a tree Avoids mutation, even for local variablesNevertheless sometimes recurions might be less effici..." }, { "title": "Data Types And Case Expression", "url": "/posts/Sec-2-Datatypes/", "categories": "Programming Languages, Section 2", "tags": "pl part a", "date": "2020-12-26 00:35:29 +0300", "snippet": "A programming language should categorize its variables into some types at some point during the life cycle of a program.We can categorize the types into two as base types and compound types.Programming languages have base types, like int, bool ,char and compound types, which are typescontain othe..." }, { "title": "The Pieces of Programming Languages", "url": "/posts/The-Pieces-of-Programming-Languages/", "categories": "Programming Languages, Section 1", "tags": "pl part a", "date": "2020-12-25 20:20:29 +0300", "snippet": "Essential “pieces” necessary for defining and learning any programming language: Syntax: How do you write the various parts of the language? Semantics: What do the various language features mean? For example, how are expressions evaluated? Idioms: What are the common approaches to using the la..." }, { "title": "Bindings, Syntax, Type-Checking and Evaulation Rules in SML", "url": "/posts/Bidings-and-Basics-in-ML/", "categories": "Programming Languages, Section 1", "tags": "pl part a", "date": "2020-12-25 01:29:29 +0300", "snippet": "Expressions And Variable Bindings in MLAn ML program is a sequence of bindings. Each bindings gets type-checked and then (assuming it type-checks) evaluated.Let’s consider variable binding now:val x = eHere, val is a keyword, x can be any variable, and e can be any expression. This could be a sim..." } ]
